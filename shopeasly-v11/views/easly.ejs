<% layout('layout') %>

<style>
/* --- AI Header Compact Overrides --- */
.ai-header { position:sticky; top:0; z-index:60; background:rgba(15,15,18,.82); backdrop-filter:blur(10px) saturate(140%); -webkit-backdrop-filter:blur(10px) saturate(140%); padding:.45rem .85rem; border-bottom:1px solid #222; box-shadow:0 2px 4px -2px rgba(0,0,0,.5); }
.ai-header-content { align-items:center; }
.ai-header .ai-logo { height:32px; width:auto; object-fit:contain; }
.ai-header .ai-title-text h1 { font-size:1.05rem; line-height:1.1; margin:0 0 2px 0; }
.ai-header .ai-title-text p { font-size:.60rem; letter-spacing:.5px; opacity:.55; margin:0; display:none; }
@media (min-width:880px){ .ai-header .ai-title-text p { display:block; } }
.ai-header-actions button { font-size:.70rem; padding:.35rem .55rem; line-height:1; }
.ai-header .ai-mode-controls { gap:.4rem !important; }
.ai-header.compact { opacity:.35; transition:opacity .35s ease, transform .35s ease; }
.ai-header.compact:hover, .ai-header.force-visible { opacity:1; }
/* =========================
     LAYOUT GRID REFACTOR
     Fixes overlapping side panel + header overlay issues
     Structure: container (column) -> header + grid(main)
     Grid: chat 1fr | panel fixed width, responsive stack on narrow
     ========================= */
.ai-assistant-container { padding-top:0; display:flex; flex-direction:column; height:100vh; max-height:100dvh; }
.ai-layout { flex:1 1 auto; display:grid; grid-template-columns:minmax(0,1fr) 340px; gap:1rem; padding:0 .85rem .85rem; align-items:stretch; height:auto; min-height:0; overflow:hidden; }
.ai-chat-container { display:flex; flex-direction:column; min-height:0; position:relative; background:var(--panel-bg,rgba(18,18,22,.55)); border:1px solid rgba(255,255,255,0.05); border-radius:10px; padding:.65rem .75rem .55rem; backdrop-filter:blur(6px); }
.ai-chat-history { flex:1 1 auto; overflow-y:auto; overscroll-behavior:contain; padding-right:.35rem; scrollbar-width:thin; }
.ai-chat-history::-webkit-scrollbar { width:8px; }
.ai-chat-history::-webkit-scrollbar-track { background:transparent; }
.ai-chat-history::-webkit-scrollbar-thumb { background:rgba(255,255,255,.12); border-radius:4px; }
.ai-input-section { margin-top:.55rem; position:relative; z-index:2; }
.ai-side-panel { display:flex; flex-direction:column; min-height:0; overflow-y:auto; background:var(--panel-bg,rgba(18,18,22,.55)); border:1px solid rgba(255,255,255,0.05); border-radius:10px; padding:.65rem .75rem .85rem; backdrop-filter:blur(6px); }
.ai-side-panel .panel-section { flex:0 0 auto; }
.ai-side-panel .panel-content { flex:1 1 auto; min-height:0; overflow-y:auto; }
.ai-side-panel::-webkit-scrollbar { width:8px; }
.ai-side-panel::-webkit-scrollbar-thumb { background:rgba(255,255,255,.12); border-radius:4px; }
/* Keep header from obscuring first focus element */
body { scroll-padding-top:70px; }
/* Responsive stacking on tablets / small screens */
@media (max-width:1100px){ .ai-layout { grid-template-columns:minmax(0,1fr) 300px; } }
@media (max-width:980px){
    .ai-layout { grid-template-columns:1fr; gap:.75rem; }
    .ai-side-panel { order:2; max-height:38vh; min-height:200px; transition:transform .35s ease, opacity .35s ease; }
    .ai-side-panel.collapsed { transform:translateY(4px) translateX(0) scale(.98); opacity:0; pointer-events:none; height:0; padding:0; margin:0; border-width:0; }
    #panelToggleBtn { display:inline-flex; }
    .ai-chat-container { order:1; }
}
/* Auto-hide side panel entirely on very narrow screens when collapsed */
@media (max-width:640px){
    .ai-side-panel { position:relative; }
}
/* Sticky mini-composer for very short viewports */
@media (max-height:640px){
    .ai-input-section { position:sticky; bottom:0; background:linear-gradient(to top, rgba(15,15,18,.95), rgba(15,15,18,.55)); padding-top:.65rem; margin-top:.35rem; backdrop-filter:blur(10px); border-top:1px solid rgba(255,255,255,0.08); }
    .ai-chat-history { padding-bottom:4.5rem; }
}
/* Jump to latest button */
.jump-latest-btn { position:absolute; right:10px; bottom:80px; background:#2563eb; color:#fff; border:none; padding:.45rem .65rem; font-size:.7rem; border-radius:20px; cursor:pointer; box-shadow:0 2px 6px rgba(0,0,0,.4); display:none; z-index:5; }
.jump-latest-btn.show { display:inline-flex; align-items:center; gap:.35rem; }
/* Side panel skeleton loading */
.panel-skeleton { display:grid; gap:.6rem; }
.skeleton-line { height:10px; border-radius:4px; background:linear-gradient(90deg, rgba(255,255,255,.07) 25%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.07) 75%); background-size:300% 100%; animation:skeletonPulse 1.4s ease-in-out infinite; }
@keyframes skeletonPulse { 0% { background-position:0 0;} 100% { background-position: -300% 0;} }
/* Panel toggle button (mobile) */
#panelToggleBtn { display:none; background:rgba(255,255,255,.08); color:#fff; border:1px solid rgba(255,255,255,.15); padding:.4rem .55rem; font-size:.65rem; border-radius:6px; cursor:pointer; line-height:1; }
#panelToggleBtn.active { background:#2563eb; border-color:#2563eb; }
/* Prevent modals/overlays from causing background scroll shift */
body.no-scroll { overflow:hidden; }
</style>

<div class="page-container ai-theme">
    <div class="ai-assistant-container">
        <!-- Header -->
        <header class="ai-header">
            <div class="ai-header-content">
                <div class="ai-title-section">
                    <img class="ai-logo" src="/images/shopeasly-logo.png" alt="Easly AI" />
                    <div class="ai-title-text">
                        <h1>Easly AI</h1>
                        <p>Creative + Operations Copilot</p>
                    </div>
                </div>
                <div class="ai-header-actions">
                    <button id="panelToggleBtn" title="Toggle side panel" aria-expanded="true">Panel ‚ñæ</button>
                    <button id="openProductWizardBtn" class="btn btn-primary">+ Product</button>
                    <button id="openBulkCreationBtn" class="btn btn-secondary" title="Create multiple products">üì¶ Bulk</button>
                    <div class="ai-mode-controls" style="display:flex;align-items:center;gap:.5rem;margin-left:.75rem;">
                        <label title="Send messages to the architect tool-loop endpoint" style="display:flex;align-items:center;gap:.35rem;cursor:pointer;user-select:none;font-size:.9rem;color:var(--text-secondary);">
                            <input type="checkbox" id="archModeToggle" style="margin:0;">
                            <span>Architect mode</span>
                        </label>
                        <span class="badge" style="background:#1e3a8a;color:#fff;padding:4px 8px;border-radius:6px;font-size:.65rem;letter-spacing:.5px;">ADMIN</span>
                        <span id="eventsStatusDot" class="status-dot" title="Real-time: unknown" style="display:inline-block;width:10px;height:10px;border-radius:50%;background:#bbb;box-shadow:0 0 0 2px rgba(0,0,0,.05);"></span>
                    </div>
                </div>
            </div>
        </header>

        <!-- Main layout: chat left, panel right -->
        <div class="ai-layout">
            <!-- Chat column -->
            <section class="ai-chat-container" aria-label="Chat">
                <button id="jumpLatestBtn" class="jump-latest-btn" aria-label="Jump to latest messages">‚Üì New</button>
                <div class="ai-chat-history" id="ai-chat-history" role="log" aria-live="polite" aria-relevant="additions">
                    <!-- Welcome message -->
                    <div class="chat-message ai-message">
                        <div class="message-avatar"><div class="avatar-ai">ü§ñ</div></div>
                        <div class="message-content">
                            <div class="message-header">
                                <span class="sender-name">Easly AI</span>
                                <span class="message-time">Just now</span>
                            </div>
                            <div class="message-text"><p>Welcome! How can I help you today?</p></div>
                        </div>
                    </div>
                </div>

                <!-- Composer -->
                <div class="ai-input-section">
                    <form id="ai-form" class="ai-form">
                        <div class="input-wrapper">
                            <textarea id="ai-input" class="form-input ai-input" rows="1" placeholder="Message Easly‚Ä¶" aria-label="Type a message" autocomplete="off" autocapitalize="sentences" spellcheck="true" maxlength="4000"></textarea>
                            <div class="input-actions">
                                <button type="button" class="attach-btn" id="attachBtn" title="Attach image" aria-label="Attach image">üìé</button>
                                <button type="button" class="attach-btn" id="openGenBtn" title="Generate design image" aria-label="Generate design image">üñºÔ∏è</button>
                                <button type="button" class="voice-btn" id="voiceBtn" data-voice-toggle title="Voice Input" aria-label="Start voice input"><span class="voice-icon">üé§</span></button>
                                <button type="submit" class="send-btn" id="sendBtn" title="Send Message" aria-label="Send message" disabled><span class="send-icon">‚û§</span></button>
                            </div>
                        </div>
                    </form>
                    <input type="file" id="imageInput" accept="image/*" style="display:none" />
                    <div id="attachmentPreview" class="attachment-preview" style="display:none"></div>

                    <!-- Voice Status -->
                    <div class="voice-status" id="voiceStatus" style="display: none;">
                        <div class="voice-animation"><div class="voice-wave"></div><div class="voice-wave"></div><div class="voice-wave"></div></div>
                        <span class="voice-text">Listening...</span>
                    </div>
                </div>
            </section>
<!-- Removed duplicated assistant container block (third copy & stray inline script fragment) -->
                </div>
            </div>
            
            <!-- CSV/Excel Import Tab -->
            <div class="tab-content" data-tab="csv">
                <div class="tab-section">
                    <h3>CSV & Excel Import</h3>
                    <p>Upload a CSV or Excel file with product data to create multiple products at once</p>
                    
                    <div class="csv-upload-area">
                        <div class="upload-section">
                            <div class="upload-dropzone" id="csvDropzone">
                                <div class="upload-content">
                                    <div class="upload-icon">üìä</div>
                                    <h4>Drop CSV or Excel file here or click to browse</h4>
                                    <p>Supports .csv, .xlsx, .xls ‚Ä¢ Maximum file size: 10MB</p>
                                    <button class="btn btn-secondary" id="csvFileBtn" style="padding: 12px 24px; font-size: 16px; font-weight: bold; margin-top: 10px;">
                                        üìÅ Choose File
                                    </button>
                                    <input type="file" id="csvFileInput" accept=".csv,.xlsx,.xls" style="display:none;">
                                </div>
                            </div>
                            
                            <div class="csv-actions" style="margin-top: 20px; display:flex; gap:10px; flex-wrap:wrap; align-items:center;">
                                <label style="display:flex; gap:6px; align-items:center; font-weight:600;">
                                    Import as
                                    <select id="importCategory" class="form-input" style="height:34px; padding:2px 8px;">
                                        <option value="Products">Products</option>
                                        <option value="Materials" selected>Materials</option>
                                        <option value="Packing Materials">Packing Materials</option>
                                    </select>
                                </label>
                                <button class="btn btn-outline" id="downloadTemplate" style="margin-right: 10px;">
                                    üì• Download CSV Template
                                </button>
                                <button class="btn btn-outline" id="downloadExcelTemplate" style="margin-right: 10px;">
                                    üì• Download Excel Template
                                </button>
                                <button class="btn btn-outline" id="csvPreview" disabled>
                                    üëÄ Preview Data
                                </button>
                                <button class="btn btn-primary" id="importCsvBtn" disabled>
                                    ‚úÖ Import to Inventory
                                </button>
                            </div>
                        </div>
                        
                        <div class="csv-requirements">
                            <h4>File Format Requirements</h4>
                            <ul>
                                <li><strong>Required columns:</strong> name, category, price, stock</li>
                                <li><strong>Optional columns:</strong> description, sku, imageUrl, materials</li>
                                <li><strong>Example:</strong> "Cool T-Shirt", "Apparel", "25.00", "50", "Amazing design"</li>
                                <li><strong>Materials:</strong> Separate multiple materials with semicolons</li>
                                <li><strong>Excel support:</strong> Data should be in the first worksheet</li>
                                <li><strong>Formats:</strong> CSV (.csv), Excel 2007+ (.xlsx), Excel 97-2003 (.xls)</li>
                            </ul>
                        </div>
                        
                        <div id="csvPreviewSection" class="csv-preview" style="display:none;">
                            <h4>Data Preview</h4>
                            <div id="csvPreviewTable"></div>
                            <div class="csv-stats">
                                <span id="csvRowCount">0 products</span>
                                <span id="csvValidation">Validation pending...</span>
                                <span id="csvImportHint" class="text-muted" style="margin-left:auto;">Tip: Set "Import as" to Materials for your file.</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- AI Batch Tab -->
            <div class="tab-content" data-tab="ai-batch">
                <div class="tab-section">
                    <h3>AI Batch Generation</h3>
                    <p>Let AI generate multiple product ideas based on your requirements</p>
                    
                    <div class="ai-batch-form">
                        <div class="form-row">
                            <div class="form-group">
                                <label for="batchTheme">Theme/Category</label>
                                <input type="text" id="batchTheme" class="form-input" placeholder="e.g., Space exploration, Vintage vibes, Minimalist">
                            </div>
                            <div class="form-group">
                                <label for="batchCount">Number of Products</label>
                                <select id="batchCount" class="form-input">
                                    <option value="5">5 products</option>
                                    <option value="10" selected>10 products</option>
                                    <option value="15">15 products</option>
                                    <option value="20">20 products</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="batchCategory">Product Category</label>
                                <select id="batchCategory" class="form-input">
                                    <option value="mixed">Mixed Categories</option>
                                    <option value="Apparel">Apparel</option>
                                    <option value="Drinkware">Drinkware</option>
                                    <option value="Stickers">Stickers</option>
                                    <option value="Prints">Prints</option>
                                    <option value="Accessories">Accessories</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="batchPriceRange">Price Range</label>
                                <select id="batchPriceRange" class="form-input">
                                    <option value="budget">Budget ($5-15)</option>
                                    <option value="mid" selected>Mid-range ($15-35)</option>
                                    <option value="premium">Premium ($35-75)</option>
                                    <option value="luxury">Luxury ($75+)</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="batchDescription">Additional Requirements</label>
                            <textarea id="batchDescription" class="form-input" rows="3" placeholder="Target audience, style preferences, special features..."></textarea>
                        </div>
                        
                        <div class="ai-options">
                            <label class="checkbox-label">
                                <input type="checkbox" id="generateImages" checked>
                                Generate product images with AI
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" id="includeVariants">
                                Create size/color variants where applicable
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" id="autoPrice">
                                Use AI-suggested pricing
                            </label>
                        </div>
                        
                        <div class="ai-batch-actions">
                            <button class="btn btn-primary btn-lg" id="generateBatch">
                                <span class="btn-icon">ü§ñ</span>Generate Product Ideas
                            </button>
                        </div>
                    </div>
                    
                    <div id="batchResults" class="batch-results" style="display:none;">
                        <div class="results-header">
                            <h4>Generated Products</h4>
                            <div class="results-stats">
                                <span id="resultsCount">0 products generated</span>
                                <span id="resultsTime">Generated in 0s</span>
                            </div>
                        </div>
                        
                        <div id="resultsGrid" class="results-grid"></div>
                        
                        <div class="results-actions">
                            <button class="btn btn-outline" id="selectAllResults">Select All</button>
                            <button class="btn btn-outline" id="deselectAllResults">Deselect All</button>
                            <button class="btn btn-primary" id="createSelectedProducts">
                                Create Selected Products
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="modal-actions">
            <button class="btn btn-secondary" id="cancelBulkCreation">Cancel</button>
            <button class="btn btn-primary" id="proceedBulkCreation" style="display:none;">
                Create Products
            </button>
        </div>
    </div>
    </div>

<!-- Inline assistant logic removed: migrated to external modular scripts for maintainability & CSP -->
<script src="https://cdn.jsdelivr.net/npm/dompurify@3.0.6/dist/purify.min.js" integrity="sha256-s4Wh05rq6ArlTc95xJMu38xpv8uKXuX4nHCqB6f+GOQ=" crossorigin="anonymous"></script>
<script src="/js/assistant-core.js" defer></script>
<script src="/js/assistant-bulk.js" defer></script>
<script src="/js/assistant-extras.js" defer></script>
<!-- Removed duplicated assistant container block (second copy) -->

                <div class="panel-section" id="brand-card-section">
                    <div class="brand-card" id="brand-card">
                        <img src="/images/shopeasly-logo.png" alt="Easly AI" class="brand-logo" />
                        <div>
                            <div class="brand-title">Easly AI</div>
                            <small class="text-muted">Creative + Operations Copilot</small>
                        </div>
                        <button class="brand-dismiss" id="brand-dismiss" title="Hide">‚úï</button>
                    </div>
                </div>

                <div class="panel-section">
                    <div class="panel-tabs">
                        <button class="panel-tab active" data-tab="quick">Quick</button>
                        <button class="panel-tab" data-tab="commands">Commands</button>
                        <button class="panel-tab" data-tab="reference">Reference</button>
                        <button class="panel-tab" data-tab="trace" title="Agent reasoning trace">Trace</button>
                    </div>

                    <div class="panel-content" id="panel-content">
                                                <!-- Skeleton placeholder shown briefly on load -->
                                                <div id="panelSkeleton" class="panel-skeleton">
                                                    <div class="skeleton-line" style="width:65%"></div>
                                                    <div class="skeleton-line" style="width:40%"></div>
                                                    <div class="skeleton-line" style="width:78%"></div>
                                                    <div class="skeleton-line" style="width:55%"></div>
                                                    <div class="skeleton-line" style="width:90%"></div>
                                                    <div class="skeleton-line" style="width:30%"></div>
                                                </div>
                        <!-- Quick -->
                        <div data-panel="quick">
                            <div class="quick-actions" style="margin-bottom:0.5rem;">
                                <button class="quick-action-btn" data-send="Show me inventory summary">üìä Inventory Summary</button>
                                <button class="quick-action-btn" data-send="What are my pending orders?">üì¶ Pending Orders</button>
                                <button class="quick-action-btn" data-send="Generate inventory usage report">üìà Usage Report</button>
                                <button class="quick-action-btn" data-send="Start a design brainstorming session">üé® Brainstorm Design</button>
                            </div>
                            <div class="quick-commands-grid">
                                <button class="quick-cmd-btn" data-send="Show inventory status">üì¶ Inventory Status</button>
                                <button class="quick-cmd-btn" data-send="List pending orders">üìã Pending Orders</button>
                                <button class="quick-cmd-btn" data-send="Generate inventory usage report">üìä Inventory Usage</button>
                                <button class="quick-cmd-btn" data-bulk-open style="background: linear-gradient(135deg, #007bff, #0056b3); color: white; font-weight: bold; border: 2px solid #007bff;">üìäüìÇ Bulk Upload</button>
                                <button class="quick-cmd-btn" data-send="Show low stock items">‚ö†Ô∏è Low Stock Alert</button>
                                <button class="quick-cmd-btn" data-send="Show packing materials low stock">üì¶‚ö†Ô∏è Packing Low Stock</button>
                                <button class="quick-cmd-btn" data-send="Start design brainstorm">üé® Start Brainstorm</button>
                                <button class="quick-cmd-btn" data-send="Generate design mockup for Space T-Shirt">üñºÔ∏è Generate Mockup</button>
                                <button class="quick-cmd-btn" data-send="Create product from last design at $25 qty 10">üõ†Ô∏è Create Product</button>
                                <button class="quick-cmd-btn" data-send="Add packing material 6x9 Poly Mailer dimensions 6x9 in stock 250">üì¶‚ûï Add Packing Material</button>
                            </div>
                        </div>

                        <!-- Commands -->
                        <div data-panel="commands" class="hidden">
                            <div class="key-terms-container">
                <div class="terms-category">
                    <h4>üì¶ Inventory</h4>
                    <div class="terms-list">
                        <div class="term-item" data-send="inventory summary">
                            <code>inventory summary</code>
                            <span>Complete overview</span>
                        </div>
                        <div class="term-item" data-send="add 25 to SKU-ABC-123">
                            <code>add 25 to SKU-ABC-123</code>
                            <span>Restock by SKU</span>
                        </div>
                        <div class="term-item" data-send="add 50 black t-shirts">
                            <code>add [qty] [item]</code>
                            <span>Restock or create</span>
                        </div>
                        <div class="term-item" data-send="add 50 new black t-shirts price 15">
                            <code>add [qty] new [item] price [x]</code>
                            <span>Create new item explicitly</span>
                        </div>
                        <div class="term-item" data-send="how many shirts do we have">
                            <code>how many [item]</code>
                            <span>Check stock</span>
                        </div>
                        <div class="term-item" data-send="set stock SKU-ABC-123 to 50">
                            <code>set stock [sku] to [qty]</code>
                            <span>Update stock</span>
                        </div>
                        <div class="term-item" data-send="show packing materials low stock">
                            <code>show packing materials low stock</code>
                            <span>Packing-only alerts</span>
                        </div>
                        <div class="term-item" data-send="add packing material 6x9 Poly Mailer dimensions 6x9 in stock 250">
                            <code>add packing material [name] dimensions [LxW(xH) unit] stock [qty]</code>
                            <span>Add packing material</span>
                        </div>
                    </div>
                </div>
                
                <div class="terms-category">
                    <h4>üìã Orders</h4>
                    <div class="terms-list">
                        <div class="term-item" data-send="order status">
                            <code>order status</code>
                            <span>Orders overview</span>
                        </div>
                        <div class="term-item" data-send="mark order ORD-123 as delivered">
                            <code>mark order [id] as [status]</code>
                            <span>Update status</span>
                        </div>
                        <div class="term-item" data-send="create order for John Smith">
                            <code>create order for [customer]</code>
                            <span>New order</span>
                        </div>
                    </div>
                </div>

                <div class="terms-category">
                    <h4>üé® Design</h4>
                    <div class="terms-list">
                        <div class="term-item" data-send="start design brainstorm">
                            <code>start design brainstorm</code>
                            <span>Begin session</span>
                        </div>
                        <div class="term-item" data-send="generate design mockup for retro space t-shirt">
                            <code>generate design mockup for [theme] [product]</code>
                            <span>Create mockup</span>
                        </div>
                        <div class="term-item" data-send="create product from last design at $25 qty 10">
                            <code>create product from last design at $[price] qty [n]</code>
                            <span>Add to inventory</span>
                        </div>
                        <div class="term-item" data-send="attach image https://example.com/pic.jpg for SKU-123">
                            <code>attach image [url] for [sku]</code>
                            <span>Link images</span>
                        </div>
                        <div class="terms-legend">
                            <small>
                                <strong>Legend:</strong><br>
                                <code>[qty]</code> = quantity (e.g., 50)<br>
                                <code>[item]</code> = product name<br>
                                <code>[sku]</code> = SKU code<br>
                                <code>[status]</code> = pending, processing, shipped, delivered
                            </small>
                        </div>
                    </div>
                </div>
                        </div>

                        <!-- Reference -->
                        <div data-panel="reference" class="hidden">
                            <div class="capabilities-grid">
                                <div class="capability-card" data-capability="analytics" title="Analytics & reports"><div class="capability-icon">üìä</div><span>Analytics</span></div>
                                <div class="capability-card" data-capability="voice" title="Voice controls"><div class="capability-icon">üé§</div><span>Voice</span></div>
                                <div class="capability-card" data-capability="forecasting" title="Forecasting"><div class="capability-icon">üìà</div><span>Forecasting</span></div>
                                <div class="capability-card" data-capability="insights" title="Insights"><div class="capability-icon">üí°</div><span>Insights</span></div>
                            </div>
                        </div>
                        <!-- Trace -->
                        <div data-panel="trace" class="hidden">
                          <div style="display:flex;align-items:center;justify-content:space-between;margin-bottom:.5rem;">
                            <h4 style="margin:0;font-size:0.95rem;">üõ∞Ô∏è Agent Trace</h4>
                            <button class="btn btn-sm btn-secondary" data-clear-trace>Clear</button>
                          </div>
                          <div id="agent-trace" style="max-height:320px;overflow:auto;font-family:var(--mono-font,monospace);font-size:11px;line-height:1.3;background:var(--code-bg,#111);padding:.5rem;border-radius:6px;border:1px solid var(--border-color,#333);"></div>
                          <small style="display:block;margin-top:.5rem;color:var(--text-secondary);">Shows live ai.plan / ai.tool.decide / ai.tool.execute / ai.final events.</small>
                        </div>
                    </div>
                </div>
            </aside>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div class="ai-loading-overlay" id="loadingOverlay" style="display: none;">
    <div class="loading-content">
        <div class="ai-thinking-animation">
            <div class="thinking-dots">
                <div class="dot"></div>
                <div class="dot"></div>
                <div class="dot"></div>
            </div>
        </div>
        <p>AI is thinking...</p>
    </div>
</div>

</div>

<!-- Settings Modal -->
<div id="settingsModal" class="modal-overlay" style="display: none;" aria-hidden="true" role="dialog" aria-modal="true">
    <div class="modal-content">
        <button class="modal-close-btn" id="closeSettingsBtn" aria-label="Close settings">√ó</button>
        <h2 style="margin-bottom: 1rem;">Settings</h2>
        <div class="settings-options">
            <label class="setting-item">
                <input type="checkbox" id="voiceResponsesToggle" onchange="updateSetting('voiceResponses', this.checked)">
                <span>Voice responses</span>
            </label>
            <label class="setting-item">
                <input type="checkbox" id="autoSuggestionsToggle" onchange="updateSetting('autoSuggestions', this.checked)">
                <span>Auto-suggestions</span>
            </label>
            <label class="setting-item">
                <input type="checkbox" id="showTimestampsToggle" onchange="updateSetting('showTimestamps', this.checked)">
                <span>Show timestamps</span>
            </label>
        </div>
    </div>
    
</div>

<!-- Image Generator Modal -->
<div id="imageGenModal" class="modal-overlay" style="display: none;" aria-hidden="true" role="dialog" aria-modal="true">
    <div class="modal-content">
        <button class="modal-close-btn" id="closeImageGenBtn" aria-label="Close image generator">√ó</button>
        <h2 style="margin-bottom: 1rem;">Generate Design Image</h2>
        <form id="imageGenForm">
            <div class="form-group">
                <label for="genDescription">Describe the design</label>
                <input id="genDescription" class="form-input" type="text" placeholder="e.g., retro space astronaut with neon colors" required />
            </div>
            <div class="form-group">
                <label for="genProduct">Target product (optional)</label>
                <select id="genProduct" class="form-input">
                    <option value="">(none)</option>
                    <option value="t-shirt">T-Shirt</option>
                    <option value="hoodie">Hoodie</option>
                    <option value="mug">Mug</option>
                    <option value="sticker">Sticker</option>
                    <option value="poster">Poster</option>
                </select>
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Generate</button>
            </div>
        </form>
        <small class="text-muted">Images are generated using your configured provider and saved locally for easy reuse.</small>
    </div>
</div>

<!-- Product Wizard Modal -->
<div id="productWizard" class="modal-overlay" style="display:none;" aria-hidden="true" role="dialog" aria-modal="true">
    <div class="modal-content" style="max-width:720px; width:95vw;">
        <button class="modal-close-btn" id="closeProductWizard" aria-label="Close product wizard">√ó</button>
        <div class="wizard-header">
            <h2>Create Product</h2>
            <div class="wizard-progress">
                <div class="progress-bar">
                    <div class="progress-fill" id="pw-progress"></div>
                </div>
                <span class="progress-text" id="pw-progress-text">Step 1 of 5</span>
            </div>
        </div>
        <ol id="pw-steps" style="display:flex; gap:0.75rem; list-style:none; padding:0; margin:0 0 1rem 0;">
            <li class="pw-step" data-step="1"><span class="step-icon">üì∑</span>Image</li>
            <li class="pw-step" data-step="2"><span class="step-icon">üß±</span>Materials</li>
            <li class="pw-step" data-step="3"><span class="step-icon">üè∑Ô∏è</span>Details</li>
            <li class="pw-step" data-step="4"><span class="step-icon">ü§ñ</span>AI Assist</li>
            <li class="pw-step" data-step="5"><span class="step-icon">‚úÖ</span>Review</li>
        </ol>
        <div id="pw-body">
            <!-- Step 1: Image -->
            <section class="pw-panel" data-step="1">
                <div class="step-header">
                    <h3>Product Image</h3>
                    <p class="step-description">Add or generate an image for your product</p>
                </div>
                
                <div class="image-options">
                    <div class="form-group">
                        <label class="form-label-enhanced">üìÅ Upload existing image</label>
                        <input type="file" id="pw-upload" accept="image/*" class="form-input" />
                        <small class="form-hint">Supports JPG, PNG, GIF (max 10MB)</small>
                    </div>
                    
                    <div class="divider">OR</div>
                    
                    <div class="form-group">
                        <label class="form-label-enhanced">üé® Generate with AI</label>
                        <div class="input-with-button">
                            <input type="text" id="pw-gen-prompt" class="form-input" placeholder="e.g., retro astronaut neon style for t-shirt" />
                            <button class="btn btn-secondary" id="pw-generate">
                                <span class="btn-icon">‚ú®</span>Generate
                            </button>
                        </div>
                        <small class="form-hint">Describe the style and theme for AI image generation</small>
                    </div>
                </div>
                
                <div id="pw-image-preview" class="image-preview-enhanced" style="display:none;">
                    <img id="pw-image" src="" alt="preview" />
                    <div class="image-actions">
                        <button class="btn btn-sm btn-secondary" id="pw-regenerate">üîÑ Regenerate</button>
                        <button class="btn btn-sm btn-secondary" id="pw-remove-image">üóëÔ∏è Remove</button>
                    </div>
                </div>
            </section>
            
            <!-- Step 2: Materials & Packaging -->
            <section class="pw-panel hidden" data-step="2">
                <div class="step-header">
                    <h3>Materials & Packaging</h3>
                    <p class="step-description">Select materials and packaging for this product</p>
                </div>
                
                <div class="materials-section">
                    <div class="form-group">
                        <label class="form-label-enhanced">üß± Required Materials</label>
                        <div id="pw-materials" class="selection-list"></div>
                        <div class="materials-summary" id="pw-materials-summary" style="display:none;">
                            <span class="summary-text">0 materials selected</span>
                            <span class="estimated-cost">Est. cost: $0.00</span>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label-enhanced">üì¶ Packaging (optional)</label>
                        <div id="pw-packaging" class="selection-list"></div>
                    </div>
                </div>
            </section>
            
            <!-- Step 3: Product Details -->
            <section class="pw-panel hidden" data-step="3">
                <div class="step-header">
                    <h3>Product Details</h3>
                    <p class="step-description">Basic product information</p>
                </div>
                
                <div class="product-details-form">
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label-enhanced">üìù Product Name</label>
                            <input type="text" id="pw-name-manual" class="form-input" placeholder="e.g., Vintage Space T-Shirt" />
                        </div>
                        <div class="form-group">
                            <label class="form-label-enhanced">üè∑Ô∏è Category</label>
                            <select id="pw-category" class="form-input">
                                <option value="Apparel">üëï Apparel</option>
                                <option value="Accessories">üëú Accessories</option>
                                <option value="Drinkware">‚òï Drinkware</option>
                                <option value="Prints">üñºÔ∏è Prints</option>
                                <option value="Stickers">üè∑Ô∏è Stickers</option>
                                <option value="Custom">‚öôÔ∏è Custom</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label-enhanced">üí∞ Price ($)</label>
                            <input type="number" step="0.01" id="pw-price-manual" class="form-input" placeholder="0.00" />
                        </div>
                        <div class="form-group">
                            <label class="form-label-enhanced">üì¶ Initial Stock</label>
                            <input type="number" id="pw-qty-manual" class="form-input" value="10" min="0" />
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label-enhanced">üìã Description (optional)</label>
                        <textarea id="pw-description" class="form-input" rows="3" placeholder="Brief product description..."></textarea>
                    </div>
                </div>
            </section>
            
            <!-- Step 4: AI Assistance -->
            <section class="pw-panel hidden" data-step="4">
                <div class="step-header">
                    <h3>AI Product Enhancement</h3>
                    <p class="step-description">Let AI help optimize your product details</p>
                </div>
                
                <div class="ai-assistance">
                    <div class="form-group">
                        <label class="form-label-enhanced">üéØ Product Type Hint</label>
                        <input type="text" id="pw-type" class="form-input" placeholder="e.g., T-Shirt, Mug, Sticker" />
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label-enhanced">üí° Additional Context</label>
                        <input type="text" id="pw-hints" class="form-input" placeholder="Target audience, style, special features..." />
                    </div>
                    
                    <div class="ai-actions">
                        <button class="btn btn-primary" id="pw-suggest">
                            <span class="btn-icon">ü§ñ</span>Get AI Suggestions
                        </button>
                        <button class="btn btn-secondary" id="pw-skip-ai">Skip AI Assistance</button>
                    </div>
                    
                    <div id="pw-suggestion" class="ai-suggestions" style="display:none;">
                        <div class="suggestions-header">
                            <h4>AI Suggestions</h4>
                            <small>Review and modify these AI-generated suggestions</small>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label-enhanced">üìù Suggested Name</label>
                            <input type="text" id="pw-name" class="form-input" />
                            <button class="btn btn-sm btn-secondary apply-suggestion" data-target="pw-name-manual">Apply</button>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label-enhanced">üí∞ Suggested Price</label>
                                <input type="number" step="0.01" id="pw-price" class="form-input" />
                                <button class="btn btn-sm btn-secondary apply-suggestion" data-target="pw-price-manual">Apply</button>
                            </div>
                            <div class="form-group">
                                <label class="form-label-enhanced">üè∑Ô∏è Suggested SKU</label>
                                <input type="text" id="pw-sku" class="form-input" />
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            
            <!-- Step 5: Review & Create -->
            <section class="pw-panel hidden" data-step="5">
                <div class="step-header">
                    <h3>Review & Create</h3>
                    <p class="step-description">Review all details before creating your product</p>
                </div>
                
                <div id="pw-review" class="product-review"></div>
                
                <div class="creation-options">
                    <div class="checkbox-group">
                        <label class="checkbox-label">
                            <input type="checkbox" id="pw-create-variants"> 
                            Create size/color variants
                        </label>
                        <label class="checkbox-label">
                            <input type="checkbox" id="pw-auto-reorder"> 
                            Enable auto-reorder when stock is low
                        </label>
                    </div>
                    
                    <div class="form-actions-enhanced">
                        <button class="btn btn-primary btn-lg" id="pw-create">
                            <span class="btn-icon">üöÄ</span>Create Product
                        </button>
                        <button class="btn btn-secondary" id="pw-save-draft">
                            <span class="btn-icon">üíæ</span>Save as Draft
                        </button>
                    </div>
                </div>
            </section>
        </div>
        <div class="form-actions" style="margin-top:1rem; display:flex; justify-content:space-between;">
            <button class="btn" id="pw-prev">Back</button>
            <button class="btn btn-primary" id="pw-next">Next</button>
        </div>
    </div>
    </div>

<!-- Bulk Product Creation Modal -->
<div id="bulkCreationModal" class="modal-overlay" style="display:none;" aria-hidden="true" role="dialog" aria-modal="true">
    <div class="modal-content" style="max-width:900px; width:95vw;">
        <button class="modal-close-btn" id="closeBulkCreation" aria-label="Close bulk creation">√ó</button>
        <div class="modal-header">
            <h2>üì¶ Bulk Product Creation</h2>
            <p>Create multiple products quickly using templates, CSV import, or AI generation</p>
        </div>
        
        <div class="bulk-creation-tabs">
            <div class="tab-headers">
                <button class="tab-header active" data-tab="templates">üéØ Templates</button>
                <button class="tab-header" data-tab="csv">üìä CSV/Excel Import</button>
                <button class="tab-header" data-tab="ai-batch">ü§ñ AI Batch</button>
            </div>
            
            <!-- Templates Tab -->
            <div class="tab-content active" data-tab="templates">
                <div class="tab-section">
                    <h3>Quick Start Templates</h3>
                    <p>Select a template to create multiple products with pre-configured settings</p>
                    
                    <div class="templates-grid">
                        <div class="template-card" data-template="apparel">
                            <div class="template-icon">üëï</div>
                            <div class="template-info">
                                <h4>Apparel Collection</h4>
                                <p>T-shirts, hoodies, and clothing items with size variants</p>
                                <div class="template-features">
                                    <span class="feature-tag">Sizes: S-XXL</span>
                                    <span class="feature-tag">Multiple Colors</span>
                                </div>
                            </div>
                            <button class="btn btn-primary template-btn">Use Template</button>
                        </div>
                        
                        <div class="template-card" data-template="drinkware">
                            <div class="template-icon">‚òï</div>
                            <div class="template-info">
                                <h4>Drinkware Set</h4>
                                <p>Mugs, tumblers, and bottles in various styles</p>
                                <div class="template-features">
                                    <span class="feature-tag">Multiple Sizes</span>
                                    <span class="feature-tag">Custom Designs</span>
                                </div>
                            </div>
                            <button class="btn btn-primary template-btn">Use Template</button>
                        </div>
                        
                        <div class="template-card" data-template="stickers">
                            <div class="template-icon">üè∑Ô∏è</div>
                            <div class="template-info">
                                <h4>Sticker Pack</h4>
                                <p>Various sticker designs and sizes</p>
                                <div class="template-features">
                                    <span class="feature-tag">Different Shapes</span>
                                    <span class="feature-tag">Bulk Pricing</span>
                                </div>
                            </div>
                            <button class="btn btn-primary template-btn">Use Template</button>
                        </div>
                        
                        <div class="template-card" data-template="seasonal">
                            <div class="template-icon">üéÑ</div>
                            <div class="template-info">
                                <h4>Seasonal Collection</h4>
                                <p>Holiday and seasonal themed products</p>
                                <div class="template-features">
                                    <span class="feature-tag">Limited Time</span>
                                    <span class="feature-tag">Themed Designs</span>
                                </div>
                            </div>
                            <button class="btn btn-primary template-btn">Use Template</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- CSV/Excel Import Tab -->
            <div class="tab-content" data-tab="csv">
                <div class="tab-section">
                    <h3>CSV & Excel Import</h3>
                    <p>Upload a CSV or Excel file with product data to create multiple products at once</p>
                    
                    <div class="csv-upload-area">
                        <div class="upload-section">
                            <div class="upload-dropzone" id="csvDropzone">
                                <div class="upload-content">
                                    <div class="upload-icon">üìä</div>
                                    <h4>Drop CSV or Excel file here or click to browse</h4>
                                    <p>Supports .csv, .xlsx, .xls ‚Ä¢ Maximum file size: 10MB</p>
                                    <button class="btn btn-secondary" id="csvFileBtn" style="padding: 12px 24px; font-size: 16px; font-weight: bold; margin-top: 10px;">
                                        üìÅ Choose File
                                    </button>
                                    <input type="file" id="csvFileInput" accept=".csv,.xlsx,.xls" style="display:none;">
                                </div>
                            </div>
                            
                            <div class="csv-actions" style="margin-top: 20px; display:flex; gap:10px; flex-wrap:wrap; align-items:center;">
                                <label style="display:flex; gap:6px; align-items:center; font-weight:600;">
                                    Import as
                                    <select id="importCategory" class="form-input" style="height:34px; padding:2px 8px;">
                                        <option value="Products">Products</option>
                                        <option value="Materials" selected>Materials</option>
                                        <option value="Packing Materials">Packing Materials</option>
                                    </select>
                                </label>
                                <button class="btn btn-outline" id="downloadTemplate" style="margin-right: 10px;">
                                    üì• Download CSV Template
                                </button>
                                <button class="btn btn-outline" id="downloadExcelTemplate" style="margin-right: 10px;">
                                    üì• Download Excel Template
                                </button>
                                <button class="btn btn-outline" id="csvPreview" disabled>
                                    üëÄ Preview Data
                                </button>
                                <button class="btn btn-primary" id="importCsvBtn" disabled>
                                    ‚úÖ Import to Inventory
                                </button>
                            </div>
                        </div>
                        
                        <div class="csv-requirements">
                            <h4>File Format Requirements</h4>
                            <ul>
                                <li><strong>Required columns:</strong> name, category, price, stock</li>
                                <li><strong>Optional columns:</strong> description, sku, imageUrl, materials</li>
                                <li><strong>Example:</strong> "Cool T-Shirt", "Apparel", "25.00", "50", "Amazing design"</li>
                                <li><strong>Materials:</strong> Separate multiple materials with semicolons</li>
                                <li><strong>Excel support:</strong> Data should be in the first worksheet</li>
                                <li><strong>Formats:</strong> CSV (.csv), Excel 2007+ (.xlsx), Excel 97-2003 (.xls)</li>
                            </ul>
                        </div>
                        
                        <div id="csvPreviewSection" class="csv-preview" style="display:none;">
                            <h4>Data Preview</h4>
                            <div id="csvPreviewTable"></div>
                            <div class="csv-stats">
                                <span id="csvRowCount">0 products</span>
                                <span id="csvValidation">Validation pending...</span>
                                <span id="csvImportHint" class="text-muted" style="margin-left:auto;">Tip: Set "Import as" to Materials for your file.</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- AI Batch Tab -->
            <div class="tab-content" data-tab="ai-batch">
                <div class="tab-section">
                    <h3>AI Batch Generation</h3>
                    <p>Let AI generate multiple product ideas based on your requirements</p>
                    
                    <div class="ai-batch-form">
                        <div class="form-row">
                            <div class="form-group">
                                <label for="batchTheme">Theme/Category</label>
                                <input type="text" id="batchTheme" class="form-input" placeholder="e.g., Space exploration, Vintage vibes, Minimalist">
                            </div>
                            <div class="form-group">
                                <label for="batchCount">Number of Products</label>
                                <select id="batchCount" class="form-input">
                                    <option value="5">5 products</option>
                                    <option value="10" selected>10 products</option>
                                    <option value="15">15 products</option>
                                    <option value="20">20 products</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="batchCategory">Product Category</label>
                                <select id="batchCategory" class="form-input">
                                    <option value="mixed">Mixed Categories</option>
                                    <option value="Apparel">Apparel</option>
                                    <option value="Drinkware">Drinkware</option>
                                    <option value="Stickers">Stickers</option>
                                    <option value="Prints">Prints</option>
                                    <option value="Accessories">Accessories</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="batchPriceRange">Price Range</label>
                                <select id="batchPriceRange" class="form-input">
                                    <option value="budget">Budget ($5-15)</option>
                                    <option value="mid" selected>Mid-range ($15-35)</option>
                                    <option value="premium">Premium ($35-75)</option>
                                    <option value="luxury">Luxury ($75+)</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="batchDescription">Additional Requirements</label>
                            <textarea id="batchDescription" class="form-input" rows="3" placeholder="Target audience, style preferences, special features..."></textarea>
                        </div>
                        
                        <div class="ai-options">
                            <label class="checkbox-label">
                                <input type="checkbox" id="generateImages" checked>
                                Generate product images with AI
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" id="includeVariants">
                                Create size/color variants where applicable
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" id="autoPrice">
                                Use AI-suggested pricing
                            </label>
                        </div>
                        
                        <div class="ai-batch-actions">
                            <button class="btn btn-primary btn-lg" id="generateBatch">
                                <span class="btn-icon">ü§ñ</span>Generate Product Ideas
                            </button>
                        </div>
                    </div>
                    
                    <div id="batchResults" class="batch-results" style="display:none;">
                        <div class="results-header">
                            <h4>Generated Products</h4>
                            <div class="results-stats">
                                <span id="resultsCount">0 products generated</span>
                                <span id="resultsTime">Generated in 0s</span>
                            </div>
                        </div>
                        
                        <div id="resultsGrid" class="results-grid"></div>
                        
                        <div class="results-actions">
                            <button class="btn btn-outline" id="selectAllResults">Select All</button>
                            <button class="btn btn-outline" id="deselectAllResults">Deselect All</button>
                            <button class="btn btn-primary" id="createSelectedProducts">
                                Create Selected Products
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="modal-actions">
            <button class="btn btn-secondary" id="cancelBulkCreation">Cancel</button>
            <button class="btn btn-primary" id="proceedBulkCreation" style="display:none;">
                Create Products
            </button>
        </div>
    </div>
    </div>

<!-- SheetJS Library for Excel file support -->
<script src="https://unpkg.com/xlsx@0.18.5/dist/xlsx.full.min.js"></script>

<!-- Inline logic fully removed; all behavior now handled by assistant-core.js / assistant-bulk.js / assistant-extras.js -->

// Enhanced message display
<!-- Duplicate inline assistant functions removed (handled by external scripts) -->
<!-- Removed residual inline bulk creation script fragment; logic lives in /js/assistant-bulk.js -->

function handleCSVFile(file) {
    const reader = new FileReader();
    reader.onload = (e) => {
        try {
            const csvText = e.target.result;
            const parsedData = parseCSV(csvText);
            
            bulkCreationState.csvData = parsedData;
            displayCSVPreview(parsedData);
            
            const previewBtn = document.getElementById('csvPreview');
            if (previewBtn) previewBtn.disabled = false;
            
            showToast(`CSV file loaded successfully: ${parsedData.data.length} products found`, 'success');
            
        } catch (error) {
            console.error('CSV parsing error:', error);
            showToast('Failed to parse CSV file. Please check the format.', 'error');
        }
    };
    
    reader.readAsText(file);
}

function handleExcelFile(file) {
    const reader = new FileReader();
    reader.onload = (e) => {
        try {
            const arrayBuffer = e.target.result;
            const workbook = XLSX.read(arrayBuffer, { type: 'array' });
            
            // Get the first worksheet
            const sheetName = workbook.SheetNames[0];
            const worksheet = workbook.Sheets[sheetName];
            
            // Convert to JSON
            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
            
            if (jsonData.length < 2) {
                throw new Error('Excel file must have at least a header row and one data row');
            }
            
            // Parse Excel data into our format
            const headers = jsonData[0].map(h => String(h || '').trim());
            const data = [];
            
            for (let i = 1; i < jsonData.length; i++) {
                const values = jsonData[i];
                const row = {};
                
                headers.forEach((header, index) => {
                    row[header] = String(values[index] || '').trim();
                });
                
                // Skip empty rows
                if (Object.values(row).some(val => val.trim())) {
                    data.push(row);
                }
            }
            
            const parsedData = { headers, data };
            bulkCreationState.csvData = parsedData;
            displayCSVPreview(parsedData);
            
            const previewBtn = document.getElementById('csvPreview');
            if (previewBtn) previewBtn.disabled = false;
            
            showToast(`Excel file loaded successfully: ${data.length} products found from worksheet "${sheetName}"`, 'success');
            
        } catch (error) {
            console.error('Excel parsing error:', error);
            showToast('Failed to parse Excel file. Please check the format and ensure data is in the first worksheet.', 'error');
        }
    };
    
    reader.readAsArrayBuffer(file);
}

function parseCSV(csvText) {
    const lines = csvText.split('\n').filter(line => line.trim());
    if (lines.length < 2) {
        throw new Error('CSV must have at least a header and one data row');
    }
    
    const headers = lines[0].split(',').map(h => h.trim().replace(/"/g, ''));
    const data = [];
    
    for (let i = 1; i < lines.length; i++) {
        const values = lines[i].split(',').map(v => v.trim().replace(/"/g, ''));
        const row = {};
        
        headers.forEach((header, index) => {
            row[header] = values[index] || '';
        });
        
        data.push(row);
    }
    
    return { headers, data };
}

function downloadCSVTemplate() {
    const template = `name,category,price,stock,description,sku,imageUrl,materials
"Cool Space T-Shirt","Apparel","25.00","50","Amazing space-themed design","APP-COOL-001","","Cotton T-Shirt;Fabric Paint"
"Galaxy Coffee Mug","Drinkware","18.50","30","Perfect for space lovers","DRK-GAL-002","","Ceramic Mug"
"Retro Sticker Pack","Stickers","8.99","100","Vintage space stickers","STK-RET-003","","Vinyl Sticker Paper"`;
    
    const blob = new Blob([template], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    
    const a = document.createElement('a');
    a.href = url;
    a.download = 'product-template.csv';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
    
    showToast('CSV template downloaded successfully', 'success');
}

function downloadExcelTemplate() {
    try {
        // Create a new workbook
        const wb = XLSX.utils.book_new();
        
        // Create sample data
        const data = [
            ['name', 'category', 'price', 'stock', 'description', 'sku', 'imageUrl', 'materials'],
            ['Cool Space T-Shirt', 'Apparel', 25.00, 50, 'Amazing space-themed design', 'APP-COOL-001', '', 'Cotton T-Shirt;Fabric Paint'],
            ['Galaxy Coffee Mug', 'Drinkware', 18.50, 30, 'Perfect for space lovers', 'DRK-GAL-002', '', 'Ceramic Mug'],
            ['Retro Sticker Pack', 'Stickers', 8.99, 100, 'Vintage space stickers', 'STK-RET-003', '', 'Vinyl Sticker Paper']
        ];
        
        // Create worksheet
        const ws = XLSX.utils.aoa_to_sheet(data);
        
        // Set column widths
        ws['!cols'] = [
            { wch: 20 }, // name
            { wch: 12 }, // category
            { wch: 8 },  // price
            { wch: 8 },  // stock
            { wch: 30 }, // description
            { wch: 15 }, // sku
            { wch: 20 }, // imageUrl
            { wch: 25 }  // materials
        ];
        
        // Add worksheet to workbook
        XLSX.utils.book_append_sheet(wb, ws, 'Products');
        
        // Write file
        XLSX.writeFile(wb, 'product-template.xlsx');
        
        showToast('Excel template downloaded successfully', 'success');
        
    } catch (error) {
        console.error('Error creating Excel template:', error);
        showToast('Failed to create Excel template', 'error');
    }
}

// Display CSV/Excel preview
function displayCSVPreview(parsedData) {
    const { headers, data } = parsedData;
    
    // Update stats
    const rowCountEl = document.getElementById('csvRowCount');
    const validationEl = document.getElementById('csvValidation');
    const previewSection = document.getElementById('csvPreviewSection');
    const previewTable = document.getElementById('csvPreviewTable');
    
    if (rowCountEl) rowCountEl.textContent = `${data.length} products`;
    
    // Validate required columns
    const requiredColumns = ['name', 'category', 'price', 'stock'];
    const missingColumns = requiredColumns.filter(col => !headers.includes(col));
    
    if (missingColumns.length > 0) {
        if (validationEl) {
            validationEl.textContent = `Missing required columns: ${missingColumns.join(', ')}`;
            validationEl.style.color = '#dc3545';
        }
        showToast(`Missing required columns: ${missingColumns.join(', ')}`, 'error');
    } else {
        if (validationEl) {
            validationEl.textContent = 'All required columns present ‚úì';
            validationEl.style.color = '#28a745';
        }
    }
    
    // Create preview table
    if (previewTable && data.length > 0) {
        let tableHTML = '<table style="width:100%; border-collapse:collapse; font-size:14px;">';
        
        // Headers
        tableHTML += '<thead><tr>';
        for (let hi=0; hi<headers.length; hi++) {
            const header = headers[hi];
            const isRequired = requiredColumns.includes(header);
            tableHTML += '<th style="border:1px solid #ddd; padding:8px; background:#f8f9fa;' + (isRequired ? ' font-weight:bold; color:#007bff;' : '') + '\">' + header + (isRequired ? ' *' : '') + '</th>';
        }
        tableHTML += '</tr></thead>';
        
        // Data rows (first 5 rows)
        tableHTML += '<tbody>';
        data.slice(0, 5).forEach(row => {
            tableHTML += '<tr>';
            headers.forEach(header => {
                const value = row[header] || '';
                tableHTML += `<td style="border:1px solid #ddd; padding:8px;">${value}</td>`;
            });
            tableHTML += '</tr>';
        });
        tableHTML += '</tbody>';
        
        if (data.length > 5) {
            tableHTML += `<tfoot><tr><td colspan="${headers.length}" style="border:1px solid #ddd; padding:8px; text-align:center; font-style:italic; background:#f8f9fa;">... and ${data.length - 5} more rows</td></tr></tfoot>`;
        }
        
        tableHTML += '</table>';
        previewTable.innerHTML = tableHTML;
    }
    
    // Show preview section
    if (previewSection) {
        previewSection.style.display = 'block';
    }
    
    // Enable preview button
    const previewBtn = document.getElementById('csvPreview');
    if (previewBtn) {
        previewBtn.disabled = false;
        previewBtn.textContent = 'üëÄ View Full Preview';
    }

    // Enable import button
    const importBtn = document.getElementById('importCsvBtn');
    if (importBtn) importBtn.disabled = data.length === 0;
}

// Show detailed preview in a modal or expanded view
function showDetailedPreview(parsedData) {
    const { headers, data } = parsedData;
    
    // Create a modal for detailed preview
    let previewModal = document.getElementById('detailedPreviewModal');
    if (!previewModal) {
        previewModal = document.createElement('div');
        previewModal.id = 'detailedPreviewModal';
        previewModal.className = 'modal-overlay';
        previewModal.style.display = 'none';
        previewModal.innerHTML = `
            <div class="modal-content" style="max-width: 90vw; max-height: 90vh; overflow: auto;">
                <button class="modal-close-btn" onclick="closeDetailedPreview()">√ó</button>
                <h2>üìä Data Preview</h2>
                <div class="preview-stats" style="margin: 15px 0; display: flex; gap: 15px;">
                    <span class="stat-badge" style="background: #007bff; color: white; padding: 8px 12px; border-radius: 4px; font-weight: bold;">
                        ${data.length} Products
                    </span>
                    <span class="stat-badge" style="background: #28a745; color: white; padding: 8px 12px; border-radius: 4px; font-weight: bold;">
                        ${headers.length} Columns
                    </span>
                </div>
                <div id="detailedPreviewTable" style="overflow: auto; max-height: 60vh;"></div>
                <div class="modal-actions" style="margin-top: 20px; text-align: center;">
                    <button class="btn btn-primary" onclick="proceedWithUpload()">‚úÖ Proceed with Upload</button>
                    <button class="btn btn-secondary" onclick="closeDetailedPreview()">Cancel</button>
                </div>
            </div>
        `;
        document.body.appendChild(previewModal);
    }
    
    // Populate the table
    const tableContainer = previewModal.querySelector('#detailedPreviewTable');
    const requiredColumns = ['name', 'category', 'price', 'stock'];
    
    let tableHTML = '<table style="width:100%; border-collapse:collapse; font-size:14px; margin: 10px 0;">';
    
    // Headers
    tableHTML += '<thead><tr style="background: #f8f9fa;">';
    for (let hi=0; hi<headers.length; hi++) {
        const header = headers[hi];
        const isRequired = requiredColumns.includes(header);
        tableHTML += '<th style="border:1px solid #ddd; padding:12px; text-align:left;' + (isRequired ? ' background:#e3f2fd; font-weight:bold; color:#007bff;' : '') + '\">' + header + (isRequired ? ' *' : '') + '</th>';
    }
    tableHTML += '</tr></thead>';
    
    // Data rows
    tableHTML += '<tbody>';
    data.forEach((row, index) => {
        const bgColor = index % 2 === 0 ? '#fff' : '#f9f9f9';
    tableHTML += '<tr style="background:' + bgColor + ';">';
        headers.forEach(header => {
            const value = row[header] || '';
            tableHTML += `<td style="border:1px solid #ddd; padding:10px;">${value}</td>`;
        });
        tableHTML += '</tr>';
    });
    tableHTML += '</tbody></table>';
    
    tableContainer.innerHTML = tableHTML;
    
    // Show modal
    previewModal.style.display = 'flex';
    document.body.classList.add('no-scroll');
}

// Close detailed preview
function closeDetailedPreview() {
    const modal = document.getElementById('detailedPreviewModal');
    if (modal) {
        modal.style.display = 'none';
        document.body.classList.remove('no-scroll');
    }
}

// Proceed with upload (placeholder for actual upload logic)
function proceedWithUpload() {
    closeDetailedPreview();
    if (bulkCreationState.csvData && bulkCreationState.csvData.data.length > 0) {
        showToast(`Ready to create ${bulkCreationState.csvData.data.length} products!`, 'success');
        // Here you would typically call your API to create the products
        // createBulkProducts(bulkCreationState.csvData.data);
    }
}

<!-- Inline bulk creation script removed; handled by /js/assistant-bulk.js -->
